name: Deployment pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  test_pipeline:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Check Style
        run: npm run eslint
      - run: npm run build
      - name: Notify build failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "ðŸš¨ Build Failed for PR #${{ github.event.pull_request.number }} by ${{ github.actor }}"}' \
          ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}
      - run: npm run test
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test

  deployment_pipeline:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build app
        run: npm run build
      - name: Notify build failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "ðŸš¨ Build Failed for PR #${{ github.event.pull_request.number }} by ${{ github.actor }}"}' \
          ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}
      - name: Trigger deployment
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v4
        with:
          url: https://full-stack-open-pokedex-jq9u.onrender.com/health
      - name: Notify deployment success
        if: success()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "âœ… Deployment Successful on Push by ${{ github.actor }}"}' \
          ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}
      - name: Notify deployment failure
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "ðŸš¨ Deployment Failed on Push by ${{ github.actor }}"}' \
          ${{ secrets.YOUR_DISCORD_WEBHOOK_URL }}

  tag_release:
    needs: [deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip') }}
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
